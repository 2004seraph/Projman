-# This file is a part of Projman, a group project orchestrator and management system,
-# made by Team 5 for the COM3420 module [Software Hut] at the University of Sheffield.

- unique_id = "collapseIssue_#{SecureRandom.hex(4)}" # Generate a unique ID using SecureRandom

.card.issue-card.mb-2.accordion-element
  %a.card-header.d-flex.justify-content-between.align-items-center{"data-bs-toggle" => "collapse",
   href: "##{unique_id}",
   role: "button",
   "data-accordion-toggle" => "",
   "aria-expanded" => "false",
   "aria-controls" => unique_id}
    .d-flex.align-items-center
      %h3.m-0.fs-5.fw-medium Project Choices Form
    %i.bi.bi-caret-right-fill
  .collapse{id: unique_id}
    .card-body.pt-1.pb-1
      = form_with(model: @milestone_response, url: "/projects/#{@current_project.id}/milestone_responses", method: "post", local: true, id: "project-choices-form") do |form|
        .form-group
          %h1
          %h1.fs-5.fw-semibold Rank the Project Choices
          %hr.divider
          - @choices.size.times do |i|
            %h1.fs-5.fw-semibold Choice #{i+1}
            = form.select "choice_#{i+1}".to_sym, @choices, { class: "form-control", required: true, include_blank: true }
            %h1
          %hr.divider
          %button.btn.btn-primary.btn-sm{ type: "submit" } Submit
          %h1

#success-message.alert.alert-success{style: "display: none;"}
  Project Choices submitted successfully!

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('project-choices-form');
    const selects = form.querySelectorAll('select');
    const selectedValues = {};

    selects.forEach(function(select) {
      select.addEventListener('change', function() {
        const selectedValue = this.value;
        selectedValues[this.id] = selectedValue;

        selects.forEach(function(otherSelect) {
          if (otherSelect !== select) {
            const options = otherSelect.options;
            for (let i = 0; i < options.length; i++) {
              if (options[i].value === "") {
                options[i].style.display = '';
              } else if (options[i].value === selectedValue || Object.values(selectedValues).includes(options[i].value)) {
                options[i].style.display = 'none';
              } else {
                options[i].style.display = '';
              }
            }
          }
        });
      });
    });

    document.getElementById('project-choices-form').addEventListener('submit', function(event) {
      event.preventDefault();

      const form = this;
      const formData = new FormData(form);
      formData.append('milestone_id', #{@proj_choices_form.id})

      fetch(form.action, {
        method: form.method,
        headers: {
          'X-CSRF-Token': document.querySelector("meta[name='csrf-token']").getAttribute("content")
        },
        body: formData
      })
      .then(response => {
        if (response.ok) {
          form.reset();
          document.getElementById('success-message').style.display = 'block';
          setTimeout(function() {
            document.getElementById('success-message').style.display = 'none';
          }, 3000);

          const issueCardElement = document.querySelector('.issue-card');
          if (issueCardElement) {
          issueCardElement.style.display = 'none';
          }
        } else {
          console.error('Error:', response.statusText);
        }
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });
  });