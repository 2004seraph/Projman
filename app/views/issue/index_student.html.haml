.d-inline-flex.pb-2
  %i.bi.bi-funnel-fill
  Filter By: 
.d-flex.align-items-center
  .dropdown.me-3
    %button.btn.btn-primary{ type: "button", id: "dropdownMenuButton", "data-bs-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false" }
      Projects:
      %span.current-selection
      %i.bi.bi-caret-down-fill
    .dropdown-menu{ "aria-labelledby": "dropdownMenuButton" }
      %a.dropdown-item{onclick: "updateSelection('All')" } All
      %hr.dropdown-divider
      - @user_projects.each do |user_project|
        %a.dropdown-item{onclick: "updateSelection('#{user_project.name}')" } #{user_project.name}

  .form-check.form-switch.form-check-reverse.me-3
    %input.form-check-input{ type: "checkbox", role: "switch",
     id: "flexSwitchCheckOpen", checked:true, onchange: "toggleSection('open-issues-section')"}
    %label.form-check-label{ for: "flexSwitchCheckOpen" }
      Show Open
  .form-check.form-switch.form-check-reverse.me-3
    %input.form-check-input{ type: "checkbox", role: "switch",
     id: "flexSwitchCheckResolved", checked:true, onchange: "toggleSection('resolved-issues-section')"}
    %label.form-check-label{ for: "flexSwitchCheckResolved" }
      Show Resolved

:javascript
  document.addEventListener("DOMContentLoaded", function() {
    updateSelection('All'); // Set initial selection to the first option
  });

  function updateSelection(selection) {
    var currentSelection = document.getElementById("dropdownMenuButton").querySelector(".current-selection");
    if (currentSelection) {
      currentSelection.innerText = selection;
      fetch("issues/project-selected", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").getAttribute("content")
        },
        body: JSON.stringify({ selected_project: selection })
      })
      .then(response => response.text())
      .then(data => {
        document.getElementById("issues-section").innerHTML = data;
        document.getElementById("issues-section").style.display = "block";
        document.getElementById("flexSwitchCheckOpen").checked = true;
        document.getElementById("flexSwitchCheckResolved").checked = true;
      })
      .catch(error => console.error('Error:', error));
    }
  }

  function toggleSection(sectionId) {
    var section = document.getElementById(sectionId);
    if (section.classList.contains('display-none')) {
      section.classList.remove('display-none');
    } else {
      section.classList.add('display-none');
    }
  }

%hr.divider

.accordion-section#issues-section{style: "display: none;"}
  render partial: 'issues-section'
