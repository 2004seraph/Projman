.hidden-partial-container{ id: "hidden-partial-container-#{issue.id}"}
  - unique_id = "collapseIssue_#{issue.id}" # Generate a unique ID using SecureRandom
  - issue_data = JSON.parse(issue.json_data)
  - course_project = CourseProject.find_by(id: Group.find_by(id: issue.group.id).course_project_id)
  - course_module = CourseModule.find_by(id: course_project.course_module_id)
  - issue_responses = issue.event_responses

  .card.issue-card.mb-2.accordion-element{id: "issue-card-#{issue.id}"}
    %a.card-header.d-flex.justify-content-between.align-items-center{"data-bs-toggle" => "collapse",
      href: "##{unique_id}",
      role: "button",
      "data-accordion-toggle" => "",
      "aria-expanded" => "false",
      "aria-controls" => unique_id,
      id: "card-header-#{issue.id}"} 
      .d-flex.align-items-center
        %span.me-3.fs-6.fw-light #{issue.created_at}
        %h3.m-0.fs-5.fw-medium #{issue_data['title']}
      %i.bi.bi-caret-right-fill
    .collapse{id: unique_id}
      .card-body.pt-1.pb-1
        .d-flex.align-items-center.justify-content-between.pt-2
          .fs-6 Posted by: #{issue_data['author']}
          .fs-6 #{course_module.code} - #{course_project.name}
        .issue-text.border.p-2.mb-2
          .fs-6 #{issue_data['content']}
        -issue_responses.each do |response|
          - response_data =  JSON.parse(response.json_data)
          .d-flex.align-items-center.justify-content-between.pt-2
            .fs-6 From: #{response_data['author']}
            .fs-6 #{response_data['timestamp']}
          .issue-text.border.p-2.mb-2
            .fs-6 #{response_data['content']}
        <!- if current_user.isStaff?>
        - if !issue.completed
          = form_with(url: "/issues/issue-response", method: "post", local: false, id: "response-form-#{issue.id}") do |form|
            %input{ type: "hidden", name: "issue_id", value: "#{issue.id}"}
            %input{ type: "hidden", name: "author", value: "#{@current_user.givenname} #{@current_user.sn}"}
            .form_group
              = form.label :Response
              = form.text_area :response, class: "form-control pt-2 pb-2 mb-2", placeholder: "Enter your response here", id: "response-textarea-#{issue.id}", required: true
            .d-flex.justify-content-end.mb-2
              %button.btn.btn-primary{type: "submit", class: "btn btn-primary me-2", id: "send-response-#{issue.id}", remote: true }
                %i.bi.bi-send-fill
                Send
          -# = link_to "#", onclick: "markIssueResolved()", class: "btn btn-primary", id: "mark-resolved-#{issue.id}" do
          -#   %i.bi.bi-check-circle-fill
          -#   Mark as Resolved
          - if current_user.is_staff?
            = form_with(url: update_status_issues_path(issue_id: issue.id, status: "closed"), method: :post, local: false, remote: true) do |form|
              %button.btn.btn-primary{type: "submit", class: "btn btn-primary", id: "mark-resolved-#{issue.id}" }
                %i.bi.bi-check-circle-fill
                Mark as Resolved
          -# = link_to mark_resolved_issues_path(issue_id: issue.id), method: :post, local: false, class: "btn btn-primary", id: "mark-resolved-#{issue.id}" do
          -#   %i.bi.bi-check-circle-fill
          -#   Mark as Resolved
          .alert.alert-success{style: "display: none;", id: "success-message-#{issue.id}" }
            Response submitted successfully!
        <!- if current_user.isStudent?>
        - if issue.completed
          .d-flex.justify-content-end.mb-2   
            = form_with(url: update_status_issues_path(issue_id: issue.id, status: "open"), method: :post, local: false, remote: true) do |form|
              %button.btn.btn-primary{type: "submit", class: "btn btn-primary", id: "reopen-#{issue.id}" }
                %i.bi.bi-check-circle-fill
                Reopen



  -# %button.btn.btn-primary{id: "mark-resolved-#{issue.id}"}
  -# %i.bi.bi-check-circle-fill
  -# Mark as Resolved