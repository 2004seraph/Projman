.hidden-partial-container{ id: "hidden-partial-container-#{issue.id}"}
  - unique_id = "collapseIssue_#{issue.id}" # Generate a unique ID using SecureRandom
  - course_project = CourseProject.find_by(id: Group.find_by(id: issue.group.id).course_project_id)
  - course_module = CourseModule.find_by(id: course_project.course_module_id)
  - issue_responses = issue.event_responses

  .card.issue-card.mb-2.accordion-element{id: "issue-card-#{issue.id}"}
    %a.card-header.d-flex.justify-content-between.align-items-center{"data-bs-toggle" => "collapse",
      href: "##{unique_id}",
      role: "button",
      "data-accordion-toggle" => "",
      "aria-expanded" => "false",
      "aria-controls" => unique_id,
      id: "card-header-#{issue.id}"} 
      .d-flex.align-items-center
        %span.me-3.fs-6.fw-light #{issue.created_at.strftime("%d/%m/%Y %H:%M")}
        %h3.m-0.fs-5.fw-medium #{issue.json_data['title']}
        %span
          - if issue.notification?(current_user)
            %i.bi.bi-exclamation-diamond-fill.icon-pad
      %i.bi.bi-caret-right-fill
    .collapse{id: unique_id}
      .card-body.pt-1.pb-1
        .d-flex.align-items-center.justify-content-between.pt-2.pb-2
          .fs-6 Posted by: #{issue.json_data['author']}
          .fs-6 #{course_module.code} - #{course_project.name}
        .fs-6 Issue:
        .issue-text.border.p-2.mb-2
          .fs-6 #{issue.json_data['content']}
        %hr.divider
        -issue_responses.each do |response|
          .d-flex.align-items-center.justify-content-between.pb-2
            - if (current_user.is_staff? && response.staff_id == current_user.staff.id) || (current_user.is_student? && response.student_id == current_user.student.id)
              .d-flex.w-100.justify-content-end
                .w-75
                  .issue-text.border.p-2{ style: "background-color: lavender;" }
                    .fs-6 #{response.json_data['content']}
                  .d-flex.align-items-center.justify-content-between.pb-2
                    .fw-light{ style: "font-size: 14px;" } From: #{response.json_data['author']}
                    .fw-light{ style: "font-size: 14px;" } #{DateTime.parse(response.json_data['timestamp']).strftime("%H:%M %d/%m/%Y")}
            - else
              .d-flex.w-100.justify-content-start
                .w-75
                  .issue-text.border.p-2{ style: "background-color: #f0f0f0;" }
                    .fs-6 #{response.json_data['content']}
                  .d-flex.align-items-center.justify-content-between.pb-2
                    .fw-light{ style: "font-size: 14px;" } From: #{response.json_data['author']}
                    .fw-light{ style: "font-size: 14px;" } #{DateTime.parse(response.json_data['timestamp']).strftime("%H:%M %d/%m/%Y")}
        - if !issue.completed
          %hr.divider
          = form_with(url: "/issues/issue-response", method: "post", local: false, id: "response-form-#{issue.id}") do |form|
            %input{ type: "hidden", name: "issue_id", value: "#{issue.id}"}
            %input{ type: "hidden", name: "author", value: "#{@current_user.givenname} #{@current_user.sn}"}
            %input{ type: "hidden", name: "selected_project", value: "#{@selected_project}"}
            %input{ type: "hidden", name: "selected_order", value: "#{@selected_order}"}
            .form_group
              = form.label :Response
              = form.text_area :response, class: "form-control pt-2 pb-2 mb-2", placeholder: "Enter your response here", id: "response-textarea-#{issue.id}", required: true
            .d-flex.justify-content-end.mb-2
              %button.btn.btn-primary{type: "submit", class: "btn btn-primary me-2", id: "send-response-#{issue.id}", remote: true }
                %i.bi.bi-send-fill
                Send
          - if current_user.is_staff?
            .d-flex.mb-2
              %button.btn.btn-primary{type: "button", "data-bs-toggle": "modal", "data-bs-target": "#resolveIssueModal-#{issue.id}", id: "mark-resolved-#{issue.id}"}
                Mark as resolved
        - if issue.completed
          .d-flex.justify-content-end.mb-2
            %button.btn.btn-primary{type: "button", "data-bs-toggle": "modal", "data-bs-target": "#reopenIssueModal-#{issue.id}", id: "reopen-#{issue.id}"}
              Reopen 

    .modal.fade{id: "resolveIssueModal-#{issue.id}", tabindex: "-1", role: "dialog", aria: {labelledby: "resolveIssueModalLabel", hidden: "true"}}
      .modal-dialog.modal-dialog-centered
        .modal-content
          .modal-header
            %h5.modal-title{ id: "resolveIssueModalLabel" } Confirm Mark Issue as Resolved
            %button.btn-close{ "aria-label": "Close", "data-bs-dismiss": "modal", type: "button" }
          .modal-body
            Are you sure you want to mark this issue as resolved?
          .modal-footer
            %button.btn.btn-secondary{ type: "button", "data-bs-dismiss": "modal" } Cancel
            = form_with(url: update_status_issues_path(issue_id: issue.id, status: "closed"), method: :post, local: false, remote: true) do |form|
              %input{ type: "hidden", name: "selected_project", value: "#{@selected_project}"}
              %input{ type: "hidden", name: "selected_order", value: "#{@selected_order}"}
              = form.submit("Confirm", class: "btn btn-primary", "data-bs-dismiss": "modal")

    .modal.fade{id: "reopenIssueModal-#{issue.id}", tabindex: "-1", role: "dialog", aria: {labelledby: "reopenIssueModalLabel", hidden: "true"}}
      .modal-dialog.modal-dialog-centered
        .modal-content
          .modal-header
            %h5.modal-title{ id: "reopnIssueModalLabel" } Confirm Reopening Issue
            %button.btn-close{ "aria-label": "Close", "data-bs-dismiss": "modal", type: "button" }
          .modal-body
            Are you sure you want to reopen this issue?
          .modal-footer
            %button.btn.btn-secondary{ type: "button", "data-bs-dismiss": "modal" } Cancel
            = form_with(url: update_status_issues_path(issue_id: issue.id, status: "open"), method: :post, local: false, remote: true) do |form|
              %input{ type: "hidden", name: "selected_project", value: "#{@selected_project}"}
              %input{ type: "hidden", name: "selected_order", value: "#{@selected_order}"}
              = form.submit("Confirm", class: "btn btn-primary", "data-bs-dismiss": "modal")
